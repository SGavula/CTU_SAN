library(cvTools)
install.packages("cvTools")
library(cvTools)
library(glmnet)
library(MASS)
# root mean squared error function for later evaluation
myRMSE = function(m, o){
sqrt(mean((m - o)^2))
}
set.seed(3) # you can change the seed or remove the line to see more runs
d<-data.frame(matrix(rnorm(200*100,0,1),nrow=200))
d$out<-rnorm(200,0,1)
lm.all<-lm(out ~ .,data=d)
lm.all.par<-coefficients(summary(lm.all))
sum(lm.all.par[,"Pr(>|t|)"]<0.05)
summary(lm.all) # print out the number of significant independent variables
summary(lm.all)
coefficients(summary(lm.all))
coefficients(summary(lm.all))
lm.all.par[,"Pr(>|t|)"]<0.05
sum(lm.all.par[,"Pr(>|t|)"]<0.05)
lm.all
lm.all.par
lm.all.par["Pr(>|t|)"]
lm.all.par[,"Pr(>|t|)"]
rownames(lm.all.par)
sel.form<-as.formula(paste("out~",paste(rownames(lm.all.par)[lm.all.par[,"Pr(>|t|)"]<0.05],collapse="+")))
lm.sel<- lm(sel.form, data=d) # obviously, it is better to employ lasso or stepwise regression, this is just to illustrate
lm.simple<-lm(out ~ 1,data=d)
lm.zero<-lm(out ~ 0,data=d)
sel.form
summary(lm.simple)
summary(lm.zero)
library(cvTools)
library(glmnet)
library(MASS)
# root mean squared error function for later evaluation
myRMSE = function(m, o){
sqrt(mean((m - o)^2))
}
set.seed(3) # you can change the seed or remove the line to see more runs
d<-data.frame(matrix(rnorm(200*100,0,1),nrow=200))
d$out<-rnorm(200,0,1)
lm.all<-lm(out ~ .,data=d)
lm.all.par<-coefficients(summary(lm.all))
sum(lm.all.par[,"Pr(>|t|)"]<0.05)
summary(lm.all) # print out the number of significant independent variables
lm.all
summary(lm.all)
coefficients(summary(lm.all))
lm.all.par[,"Pr(>|t|)"]
lm.all.par[,"Pr(>|t|)"]<0.05
sum(lm.all.par[,"Pr(>|t|)"]<0.05)
rownames(lm.all.par)
pred<-rownames(lm.all.par)[which(lm.all.par[,"Pr(>|t|)"]==min(lm.all.par[,"Pr(>|t|)"]))] # find the most significant predictor
cor.test(d[[pred]],d$out)
plot(d[[pred]], d$out,xlab=pred,ylab="out") # visualize the relationship between indep and dep variable
abline(lm(as.formula(paste("out~",pred)), d),col="red", lw=2) # visualize the fit
sel.form<-as.formula(paste("out~",paste(rownames(lm.all.par)[lm.all.par[,"Pr(>|t|)"]<0.05],collapse="+")))
lm.sel<- lm(sel.form, data=d) # obviously, it is better to employ lasso or stepwise regression, this is just to illustrate
lm.simple<-lm(out ~ 1,data=d)
lm.zero<-lm(out ~ 0,data=d)
sel.form
summary(lm.simple)
